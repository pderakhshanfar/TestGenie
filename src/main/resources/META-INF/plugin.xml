<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>org.jetbrains.research.testgenie</id>
    <name>TestSpark</name>
    <vendor>ictl</vendor>


    <description><![CDATA[
    <p>TestSpark is a plugin for generating unit tests. TestSpark natively integrates different AI-based test generation tools and techniques in the IDE. </p>

    <p> TestSpark currently supports two test generation strategies:</p>
    <ul>
        <li>LLM-based test generation (using <a href="https://openai.com">OpenAI</a>, HuggingFace, and JetBrains internal AI Assistant platform)</li>
        <li>Local search-based test generation (using <a href="https://www.evosuite.org">EvoSuite</a>)</li>
    </ul>

    <h4>LLM-based test generation</h4>
    <p>For this type of test generation, TestSpark sends request to different Large Language Models. Also, it automatically checks if tests are valid before presenting it to users.</p>
    <p>This feature needs a token from OpenAI, HuggingFace, or the AI Assistant platform.</p>
    <ul>
        <li>Supports Java and Kotlin.</li>
        <li>Generates unit tests for capturing failures.</li>
        <li>Generate tests for Java classes, methods, and single lines.</li>
    </ul>

    <h4>Local search-based test generation</h4>
    <p>For this type of test generation, TestSpark uses <a href="https://www.evosuite.org">EvoSuite</a>, which is the  most powerful search-based local test generator. </p>
    <ul>
        <li>Supports up to Java 11.</li>
        <li>Generates tests for different test criteria: line coverage, branch coverage, I/O diversity, exception coverage, mutation score.</li>
        <li>Generates unit tests for capturing failures.</li>
        <li>Generate tests for Java classes, methods, and single lines.</li>
    </ul>

    <p>Initially implemented by <a href="https://www.ciselab.nl">CISELab</a> at <a href="https://se.ewi.tudelft.nl">SERG @ TU Delft</a>, TestSpark is currently developed and maintained by <a href="https://lp.jetbrains.com/research/ictl/">ICTL at JetBrains Research</a>.</p>
      ]]></description>

    <change-notes><![CDATA[
        <h4>0.3.1</h4>
            <ul>
                <li>Kotlin test generation now works in K2 mode as well./li>
                <li>Support IDEA 243.*.</li>
                <li>Fixed minor bugs.</li>
            </ul>
        <h4>0.3.0</h4>
            <ul>
                <li>Add full LLM-based Kotlin test generation for line, method/function, and class.</li>
                <li>Integration with HuggingFace.</li>
                <li>Support IDEA 242.*</li>
                <li>Fixed multiple bugs in the LLM-based test generation algorithm.</li>
                <li>Fixed multiple bugs in the UI.</li>
            </ul>
        <h4>0.2.1</h4>
            <ul>
                <li>Fix several minor bugs related to JUnit5 support and default template.</li>
            </ul>
        <h4>0.2.0</h4>
            <ul>
                <li>Add JUnit5 test generation for LLM-based approach</li>
                <li>Users can provide samples to LLM for test generation</li>
                <li>Add automatic sample detector for suggesting samples to user for LLM-based test generation</li>
                <li>Users can save multiple prompt templates in settings now and use each of them for test genertion.</li>
                <li>Supporting default structures for user's feedback to LLM for generated tests </li>
                <li>Supporting the newer versions of IntelliJ IDEA (242.*)</li>
                <li>Prompt structure improving</li>
                <li>EvoSuite's communication port is now changeable in the plugin's settings.</li>
                <li>Fixed An error with saving settings data between plugin runs</li>
                <li>Major refactoring of the plugin, including moving majority of LLM-based test generation algorithm into a common module (to be used by other instances of plugin for other IDEs)</li>
            </ul>
        <h4>0.1.9</h4>
            <ul>
                <li>Model selection for JetBrains AI Assistant platform</li>
                <li>Better user's request handling</li>
                <li>Better default prompt</li>
                <li>Fixed a minor bug in displaying number of passed tests</li>
                <li>Test execution tasks will run in background now</li>
                <li>Fixed a bug related to predicting if a prompt is larger than the maximum prompt size</li>
            </ul>
        <h4>0.1.8</h4>
            <ul>
                <li>Fixed Windows compatibility issues</li>
                <li>Improve and refactor the test execution process</li>
            </ul>
        <h4>0.1.7</h4>
            <ul>
                <li>Fixed minor bugs and improve new test generation UI</li>
            </ul>
        <h4>0.1.6</h4>
            <ul>
                <li>New UI for requesting a test generation process</li>
                <li>Users can now modify the prompt for each LLM-based request in the settings of the plugin</li>
                <li>Added the usage guide window</li>
                <li>Fixed some minor bugs</li>
                <li>Add support build 233.*</li>
            </ul>
        <h4>0.1.5</h4>
            <ul>
                <li>Fix some minor bugs in LLM-based test generation process</li>
            </ul>
        <h4>0.1.4</h4>
            <ul>
                <li>New UI for test generation report</li>
                <li>Add code highlighting and auto-completion for generated tests</li>
                <li>Add Java code formatter for generated tests</li>
                <li>Add direct user feedback to modify each generated test by LLM</li>
                <li>Improve the test case execution process</li>
                <li>Improve prompt generation</li>
            </ul>
        <h4>0.1.3</h4>
            <ul>
                <li>Add LLM-based test generation using Grazie platform in the settings</li>
                <li>Fix compilation issue in LLM-based test generation</li>
                <li>Fix Evosuite test generation freezing in case that a wrong java path is provided</li>
            </ul>

        <h4>0.1.2</h4>
            <ul>
                <li>Add LLM-based test generation using OpenAI platform</li>
                <li>Add visualizing the result of tests executions</li>
                <li>Improving user interaction with test cases</li>
                <li>Changing the plugin's name</li>
                <li>Fix bugs</li>
            </ul>

        <h4>0.1.1</h4>
            <ul>
                <li>Add LLM-based test generation for lines and methods</li>
                <li>Add support for mocking-related annotations in generated tests</li>
                <li>Smarter prompt generation to make sure that its number of tokens does not exceed the limits</li>
                <li>Improve test parsing</li>
                <li>Fix some major performance and functional bugs in interaction with Jacoco</li>
                <li>code refactoring</li>
            </ul>

        <h4>0.1.0</h4>
            <ul>
                <li>Add LLM-based test generation using LLM platform</li>
                <li>Add test execution and coverage information collector for tests generated by LLM</li>
                <li>Add a feedback cycle between test compilation and LLM to ensure tests generated by LLM can be compiled</li>
                <li>Better error handling</li>
            </ul>

        <h4>0.0.3</h4>
            <ul>
                <li>Fix some bugs</li>
            </ul>

        <h4>0.0.2</h4>
            <ul>
                <li>Improved test generation by aborting incomplete project builds and ensuring successful project builds before test generation begins</li>
                <li>Catching Evosuite errors related to unknown classes by checking for incorrect input of .class files</li>
                <li>Automatic creation of test files with the automatic addition includes and package lines</li>
                <li>Error checking for target class initialization</li>
                <li>Compatibility with IDEA 231.*</li>
                <li>Add automated project build</li>
                <li>Add compiled classes detector</li>
            </ul>
    ]]>
    </change-notes>

    <depends>com.intellij.modules.platform</depends>
    <depends>org.jetbrains.idea.maven</depends>
    <depends>com.intellij.gradle</depends>

    <!--    Plugin depends on the Kotlin support plugin that comes with org.jetbrains.kotlin.
            This dependency is optional, which means plugin can run even if the Kotlin plugin is not available or not enabled.
            This dependency will be loaded only when actually needed.
            Moreover, we specify the configuration file to consider when the dependency is needed. -->
    <depends
            config-file="testgenie-kotlin.xml"
            optional="true">
        org.jetbrains.kotlin
    </depends>

    <!--    Plugin depends on the Java support plugin that comes with com.intellij.java.
            This dependency is optional, which means plugin can run even if the Java plugin is not available or not enabled.
            This dependency will be loaded only when actually needed.
            Moreover, we specify the configuration file to consider when the dependency is needed. -->
    <depends
            config-file="testgenie-java.xml"
            optional="true">
        com.intellij.java
    </depends>

    <!-- Define an extension point for the plugin-->
    <extensionPoints>
        <extensionPoint
                name="psiHelperProvider"
                beanClass="com.intellij.lang.LanguageExtensionPoint"
                dynamic="true">
            <with attribute="implementationClass"
                  implements="org.jetbrains.research.testspark.langwrappers.PsiHelperProvider"/>
        </extensionPoint>
    </extensionPoints>

    <!-- This is a temporary mechanism to mark the plugin as K2 compatible. -->
    <extensions defaultExtensionNs="org.jetbrains.kotlin">
        <supportsKotlinPluginMode supportsK2="true"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <toolWindow id="TestSpark" secondary="true" anchor="right"
                    icon="org.jetbrains.research.testspark.display.TestSparkIcons.toolWindowIcon"
                    factoryClass="org.jetbrains.research.testspark.toolwindow.TestSparkToolWindowFactory"/>

        <!-- Application-level services -->
        <applicationService
                serviceImplementation="org.jetbrains.research.testspark.services.LLMSettingsService"/>
        <applicationService
                serviceImplementation="org.jetbrains.research.testspark.services.PluginSettingsService"/>
        <applicationService
                serviceImplementation="org.jetbrains.research.testspark.services.EvoSuiteSettingsService"/>

        <!-- Configurables -->
        <projectConfigurable
                parentId="tools"
                instance="org.jetbrains.research.testspark.settings.plugin.PluginSettingsConfigurable"
                id="PluginSettings"
                displayName="TestSpark"/>
        <projectConfigurable
                parentId="PluginSettings"
                instance="org.jetbrains.research.testspark.settings.llm.LLMSettingsConfigurable"
                id="LLMSettings"
                displayName="Large Language Models"/>
        <projectConfigurable
                parentId="PluginSettings"
                instance="org.jetbrains.research.testspark.settings.evosuite.EvoSuiteSettingsConfigurable"
                id="EvoSuiteSettings"
                displayName="EvoSuite"/>
        <projectConfigurable
                parentId="PluginSettings"
                instance="org.jetbrains.research.testspark.settings.kex.KexSettingsConfigurable"
                id="KexSettings"
                displayName="Kex"/>

        <!-- Notifications -->
        <notificationGroup id="Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="EvoSuite Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Build Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="LLM Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Kex Execution Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Generation Error"
                           displayType="BALLOON"/>
        <notificationGroup id="Test case copied"
                           displayType="BALLOON"/>

    </extensions>

    <actions>
        <!-- TestSpark actions -->
        <action id="TestSpark.TestSparkActions" text="TestSpark" description="Actions related to TestSpark"
                class="org.jetbrains.research.testspark.actions.TestSparkAction">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>

        </action>
    </actions>
</idea-plugin>
